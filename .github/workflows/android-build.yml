name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Explicitly check if requirements.txt exists
          if [ -f "python/requirements.txt" ]; then
            pip install -r python/requirements.txt
          else
            echo "requirements.txt not found at python/requirements.txt"
            exit 1
          fi

      - name: List directory structure
        run: |
          echo "Current directory structure:"
          ls -R

      - name: Build Python bridge
        run: |
          # Create python directory if it doesn't exist
          mkdir -p python
          
          # Copy files to python directory
          cp -r python/flutter_onnx_ffi/* python/
          
          # Build the bridge
          cd python
          python build.py
          
          # Create directories for Android libraries
          mkdir -p ../android/app/src/main/jniLibs/arm64-v8a/
          mkdir -p ../android/app/src/main/jniLibs/armeabi-v7a/
          mkdir -p ../android/app/src/main/jniLibs/x86_64/
          
          # Copy the compiled library
          if [ -f "build/lib*/libocr_bridge.so" ]; then
            cp build/lib*/libocr_bridge.so ../android/app/src/main/jniLibs/arm64-v8a/
            cp build/lib*/libocr_bridge.so ../android/app/src/main/jniLibs/armeabi-v7a/
            cp build/lib*/libocr_bridge.so ../android/app/src/main/jniLibs/x86_64/
          else
            echo "Library file not found!"
            exit 1
          fi

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Update Android Gradle
        run: |
          cd android
          chmod +x gradlew
          ./gradlew wrapper --gradle-version 7.6.1
          cd ..

      - name: Configure Gradle for Android
        run: |
          echo "org.gradle.jvmargs=-Xmx1536M -Dfile.encoding=UTF-8" >> android/gradle.properties
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties

      - name: Build Android APK
        run: flutter build apk --debug

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: build/app/outputs/flutter-apk/app-debug.apk